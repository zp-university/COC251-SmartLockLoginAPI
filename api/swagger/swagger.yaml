# Login API Courtesy of https://github.com/miguelduarte42/swagger-jwt-example
swagger: "2.0"
info:
  version: "1.0.0"
  title: Swagger JWT Example
host: smartlockapp.zackpollard.pro
basePath: /api/v1/auth
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.


     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.


     The following syntax must be used in the 'Authorization' header :

         Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    x-swagger-router-controller: login-controller
    post:
      tags:
        - auth
      operationId: loginPost
      description: "Login"
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /signup:
    x-swagger-router-controller: login-controller
    post:
      tags:
        - auth
      operationId: signupPost
      description: "Signup"
      parameters:
        - name: newUser
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "409":
          description: "User Details not Accepted"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  User:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
      email:
        type: string
        example: "abc123@gmail.com"
      firstname:
        type: string
        example: "James"
      lastname:
        type: string
        example: "Smith"
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string